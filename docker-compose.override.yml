# =================================================================
# Corner League Media - Local Development Overrides
# =================================================================
# This file provides local development customizations and additional services
# It automatically extends docker-compose.yml when running docker compose commands
# =================================================================

version: '3.8'

services:
  # Development Tools & Database Administration
  adminer:
    image: adminer:4.8.1-standalone
    container_name: corner-league-adminer
    restart: unless-stopped
    ports:
      - "8081:8080"
    environment:
      ADMINER_DEFAULT_SERVER: postgres
      ADMINER_DESIGN: pepa-linha-dark
      ADMINER_PLUGINS: tables-filter tinymce
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - corner-league-network
    profiles:
      - tools

  # Redis Administration
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: corner-league-redis-commander
    restart: unless-stopped
    ports:
      - "8082:8081"
    environment:
      REDIS_HOSTS: local:redis:6379
      HTTP_USER: ${REDIS_COMMANDER_USER:-admin}
      HTTP_PASSWORD: ${REDIS_COMMANDER_PASSWORD:-admin}
    depends_on:
      redis:
        condition: service_healthy
    networks:
      - corner-league-network
    profiles:
      - tools

  # OpenTelemetry Collector for Observability
  otel-collector:
    image: otel/opentelemetry-collector-contrib:latest
    container_name: corner-league-otel-collector
    restart: unless-stopped
    ports:
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP HTTP receiver
      - "8888:8888"   # Prometheus metrics
      - "8889:8889"   # Prometheus exporter
    volumes:
      - ./otel/otel-collector.yml:/etc/otelcol-contrib/otel-collector.yml:ro
    command: ["--config=/etc/otelcol-contrib/otel-collector.yml"]
    depends_on:
      - prometheus
    networks:
      - corner-league-network
    profiles:
      - monitoring

  # Jaeger for Distributed Tracing
  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: corner-league-jaeger
    restart: unless-stopped
    ports:
      - "16686:16686"  # Jaeger UI
      - "14250:14250"  # gRPC
      - "14268:14268"  # HTTP
      - "6831:6831/udp"    # UDP
      - "6832:6832/udp"    # UDP
    environment:
      COLLECTOR_OTLP_ENABLED: true
      COLLECTOR_ZIPKIN_HOST_PORT: :9411
    networks:
      - corner-league-network
    profiles:
      - monitoring

  # MailHog for Email Testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: corner-league-mailhog
    restart: unless-stopped
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - corner-league-network
    profiles:
      - tools

  # MinIO for S3-compatible Object Storage (Development)
  minio:
    image: minio/minio:latest
    container_name: corner-league-minio
    restart: unless-stopped
    ports:
      - "9000:9000"  # API
      - "9001:9001"  # Console
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-admin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - corner-league-network
    profiles:
      - storage

  # Additional Development Services can be added here
  # Example: Elasticsearch, RabbitMQ, etc.

# Development-specific volume overrides
volumes:
  minio_data:
    driver: local

# Development-specific network configurations
networks:
  corner-league-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
          gateway: 172.20.0.1